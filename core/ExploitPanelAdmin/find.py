import socket, binascii, threading, time,sys
sys.path.append('../modules/')
from color import *

# MAC server discovery by BigNerd95


class MAC:

    def __init__(self):
        self.search = True
        self.devices = []

    def discovery(self,sock):
        try:
            while self.search:
                sock.sendto(b"\x00\x00\x00\x00", ("255.255.255.255", 5678))
        except:
           print(f"{W}[{R} - {W}]{B} No {R}CONNECT{N} {B}For Your Router{N} \n\n\n{WOW}"
                 f"----- Enter Ctrl+C for (Exit) -----{N}")

    def soRun(self):
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
        sock.bind(("0.0.0.0", 5678))
        threading.Thread(target=self.discovery, args=(sock,)).start()
        while self.search:
            try:
                data, addr = sock.recvfrom(1024)
                if b"\x00\x01\x00\x06" in data:
                    start = data.index(b"\x00\x01\x00\x06") + 4
                    mac = data[start:start + 6]

                    if mac not in self.devices:
                        self.search = False
                        self.devices.append(mac)
                        addr = addr[0]
                        mac = '' + ':'.join('%02x' % b for b in mac)
                        return [addr, mac]

            except KeyboardInterrupt:
                self.search = False
                break